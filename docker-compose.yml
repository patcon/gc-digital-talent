services:

  postgres:
    image: postgres:13.2
    restart: always
    environment:
      POSTGRES_PASSWORD: password1234
    volumes:
      - ./infrastructure/db:/docker-entrypoint-initdb.d/
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  adminer:
    image: adminer
    restart: always
    links:
      - postgres
    ports:
      - 8080:8080

  php:
    build: ./infrastructure/php-container
    working_dir: /var/www/html
    restart: always
    volumes:
      - ./infrastructure/php-container/src:/var/www/html/
      - ./api:/var/www/html/api
      - ./auth:/var/www/html/auth
      - ./frontend:/var/www/html/frontend
      - ./tc-report:/var/www/html/tc-report
    ports:
      - 8000:80
      - 8001:443
    env_file:
      - ./frontend/.apache_env

  maintenance:
    build: ./infrastructure/maintenance-container
    working_dir: /root/scripts
    deploy:
      mode: replicated
      replicas: 0
    environment:
      # Prevent `npm install` from trying to install Cypress in the container,
      # which is not required and just creates permission issues.
      # See: https://docs.cypress.io/guides/getting-started/installing-cypress#Skipping-installation
      - CYPRESS_INSTALL_BINARY=0
    volumes:
      - maintenancedata:/root
      - ./maintenance/scripts:/root/scripts
      - ./api:/var/www/html/api
      - ./auth:/var/www/html/auth
      - ./frontend:/var/www/html/frontend
      - ./tc-report:/var/www/html/tc-report

  # See: https://github.com/navikt/mock-oauth2-server#standalone-server
  mock-auth:
    image: ghcr.io/navikt/mock-oauth2-server:0.4.7
    ports:
      - 8081:8081
    hostname: auth.talent.canada.test
    environment:
      SERVER_PORT: 8081
      # Things to note in config:
      # - we mock a response but leave out "sub", so that value entered in fake
      #   login form will be used.
      # - we match on any client_id ("*") to avoid gotchas of changing `.env`
      #   settings when working between local mock server and remote UAT servers.
      # TODO: Consider setting specific client_id to match value in `.env.sample`.
      JSON_CONFIG_PATH: /app/conf/mock-auth-server.json
    volumes:
      - ./infrastructure/conf:/app/conf

volumes:
  pgdata:
  maintenancedata:
